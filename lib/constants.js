"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SQL_SYMBOLE = exports.COMPUTE_OPERATOR = exports.COMPARE_OPERATOR = exports.LOGIC_OPERATOR = exports.ISOLATION_LEVEL = exports.PARAMETER_DIRECTION = exports.SORT_DIRECTION = void 0;
/**
 * 排序方向
 */
var SORT_DIRECTION;
(function (SORT_DIRECTION) {
    SORT_DIRECTION["ASC"] = "ASC";
    SORT_DIRECTION["DESC"] = "DESC";
})(SORT_DIRECTION = exports.SORT_DIRECTION || (exports.SORT_DIRECTION = {}));
/**
 * 参数方向
 */
var PARAMETER_DIRECTION;
(function (PARAMETER_DIRECTION) {
    PARAMETER_DIRECTION["INPUT"] = "INPUT";
    PARAMETER_DIRECTION["OUTPUT"] = "OUTPUT";
})(PARAMETER_DIRECTION = exports.PARAMETER_DIRECTION || (exports.PARAMETER_DIRECTION = {}));
/**
 * 参数隔离方向
 */
var ISOLATION_LEVEL;
(function (ISOLATION_LEVEL) {
    ISOLATION_LEVEL[ISOLATION_LEVEL["READ_COMMIT"] = 1] = "READ_COMMIT";
    ISOLATION_LEVEL[ISOLATION_LEVEL["READ_UNCOMMIT"] = 2] = "READ_UNCOMMIT";
    ISOLATION_LEVEL[ISOLATION_LEVEL["REPEATABLE_READ"] = 3] = "REPEATABLE_READ";
    ISOLATION_LEVEL[ISOLATION_LEVEL["SERIALIZABLE"] = 4] = "SERIALIZABLE";
    ISOLATION_LEVEL[ISOLATION_LEVEL["SNAPSHOT"] = 5] = "SNAPSHOT";
})(ISOLATION_LEVEL = exports.ISOLATION_LEVEL || (exports.ISOLATION_LEVEL = {}));
/**
 * 逻辑运算符列表
 */
var LOGIC_OPERATOR;
(function (LOGIC_OPERATOR) {
    LOGIC_OPERATOR["AND"] = "AND";
    LOGIC_OPERATOR["OR"] = "OR";
    LOGIC_OPERATOR["NOT"] = "NOT";
})(LOGIC_OPERATOR = exports.LOGIC_OPERATOR || (exports.LOGIC_OPERATOR = {}));
/**
 * 比较运算符列表
 */
var COMPARE_OPERATOR;
(function (COMPARE_OPERATOR) {
    COMPARE_OPERATOR["IS_NULL"] = "IS NULL";
    COMPARE_OPERATOR["IS_NOT_NULL"] = "IS NOT NULL";
    COMPARE_OPERATOR["IN"] = "IN";
    COMPARE_OPERATOR["NOT_IN"] = "NOT IN";
    COMPARE_OPERATOR["EQ"] = "=";
    COMPARE_OPERATOR["NEQ"] = "<>";
    COMPARE_OPERATOR["GT"] = ">";
    COMPARE_OPERATOR["GTE"] = ">=";
    COMPARE_OPERATOR["LT"] = "<";
    COMPARE_OPERATOR["LTE"] = "<=";
    COMPARE_OPERATOR["LIKE"] = "LIKE";
    COMPARE_OPERATOR["NOT_LIKE"] = "NOT LIKE";
    COMPARE_OPERATOR["EXISTS"] = "EXISTS";
})(COMPARE_OPERATOR = exports.COMPARE_OPERATOR || (exports.COMPARE_OPERATOR = {}));
/**
 * 算术运算符列表
 */
var COMPUTE_OPERATOR;
(function (COMPUTE_OPERATOR) {
    COMPUTE_OPERATOR["ADD"] = "+";
    COMPUTE_OPERATOR["SUB"] = "-";
    COMPUTE_OPERATOR["MUL"] = "*";
    COMPUTE_OPERATOR["DIV"] = "/";
    COMPUTE_OPERATOR["MOD"] = "%";
    COMPUTE_OPERATOR["BITAND"] = "&";
    COMPUTE_OPERATOR["BITOR"] = "|";
    COMPUTE_OPERATOR["BITNOT"] = "~";
    COMPUTE_OPERATOR["BITXOR"] = "^";
    COMPUTE_OPERATOR["SHR"] = ">>";
    COMPUTE_OPERATOR["SHL"] = "<<";
    COMPUTE_OPERATOR["NEG"] = "-";
})(COMPUTE_OPERATOR = exports.COMPUTE_OPERATOR || (exports.COMPUTE_OPERATOR = {}));
/**
 * SQL运算符
 */
/**
 * SQL运算符
 */
var SQL_SYMBOLE;
(function (SQL_SYMBOLE) {
    SQL_SYMBOLE["RAW"] = "RAW";
    // ANY = '*',
    SQL_SYMBOLE["VALUE_LIST"] = "VALUE_LIST";
    SQL_SYMBOLE["COLUMN_LIST"] = "COLUMN_LIST";
    SQL_SYMBOLE["INVOKE_ARGUMENT_LIST"] = "INVOKE_ARGUMENT_LIST";
    SQL_SYMBOLE["EXECUTE_ARGUMENT_LIST"] = "EXECUTE_ARGUMENT_LIST";
    SQL_SYMBOLE["VARAINT_DECLARE"] = "VARAINT_DECLARE";
    SQL_SYMBOLE["IDENTIFIER"] = "IDENTIFIER";
    /**
     * 系统内建标识符，如COUNT, SUM等系统函数
     */
    SQL_SYMBOLE["BUILDIN_IDENTIFIER"] = "BUILDIN_IDENTIFIER";
    SQL_SYMBOLE["PARAMETER"] = "PARAMETER";
    SQL_SYMBOLE["VARAINT"] = "VARAINT";
    SQL_SYMBOLE["DATATYPE"] = "DATATYPE";
    SQL_SYMBOLE["SELECT"] = "SELECT";
    SQL_SYMBOLE["UPDATE"] = "UPDATE";
    SQL_SYMBOLE["INSERT"] = "INSERT";
    SQL_SYMBOLE["DELETE"] = "DELETE";
    SQL_SYMBOLE["EXECUTE"] = "EXECUTE";
    SQL_SYMBOLE["INVOKE"] = "INVOKE";
    SQL_SYMBOLE["ASSIGNMENT"] = "ASSIGNMENT";
    SQL_SYMBOLE["CONSTANT"] = "CONSTANT";
    SQL_SYMBOLE["CONDITION"] = "CONDITION";
    SQL_SYMBOLE["SORT"] = "SORT";
    SQL_SYMBOLE["BRACKET"] = "BRACKET";
    SQL_SYMBOLE["ALIAS"] = "ALIAS";
    SQL_SYMBOLE["BINARY"] = "BINARY";
    SQL_SYMBOLE["UNARY"] = "UNARY";
    SQL_SYMBOLE["JOIN"] = "JOIN";
    SQL_SYMBOLE["UNION"] = "UNION";
    SQL_SYMBOLE["WHEN"] = "WHEN";
    SQL_SYMBOLE["CASE"] = "CASE";
    SQL_SYMBOLE["DECLARE"] = "DECLARE";
    SQL_SYMBOLE["DOCUMENT"] = "DOCUMENT";
})(SQL_SYMBOLE = exports.SQL_SYMBOLE || (exports.SQL_SYMBOLE = {}));
//# sourceMappingURL=constants.js.map